1.eclipse的使用
	现有项目  --> 包 --> 类
	
	先创建项目让后创建包再创建类
	
2.快捷键
	内容辅助键：alt+/
		A:main方法
			main,然后alt+/,回车
			
		B:输出语句
			syso,然后然后alt+/,回车
	
	快捷键：
			A:注释
				前提:要将注释的内容选中
				
				单行	选中内容，ctrl+/,再来一次就是取消
				多行	选择内容，ctrl+shift+/,ctrl+shift+\
				
			B:格式化
				ctrl+shift+f

			C:向下复制选中行
				ctrl + alt + 下键
				
			D:向上复制选中行
				ctrl + alt + 上键
				
			E:删除选中行
				ctrl + D
				
			F:新建
				ctrl + n
				
			G:整理包(导包)
				ctrl + shift + o
				
				
3.运算符
	什么是运算符:
		就是参与运算的符号.(连接常量和变量的符号)
		
	什么是表达式:
		用运算符连接常量或者变量的符合java语法的式子.不同的运算符连接的表达式代表是不同运算符的表达式.
		
		一个变量或者一个常量,是最简单的表达式.
		
	运算符的分类:
		算术运算符:
			+,-,*,/,%,++,--
			
			/:如果两个整数向除取得是的商(整数).
				如果想得到一个小数,参与运算的数值,保证其中一个是小数即可.
				
			%:取余(判断一个数是偶数)
			
			字符参与加法运算:
				就是那字符所对应的整数,做运算.
				
				'0'		48
		  		'a'		97
		  		'A'		65
				
			字符串参与加法运算:
				和字符串进行拼接(任意类型的数据,和字符串做拼接都会产生一个新的字符串)
				
			++,--运算符：对变量做加1或者减1的操作(只对变量操作)。
			++或者--既可以放在变量的后面，也可以放在变量的前面。
			单独使用的时候，++或者--无论是放在变量的前面还是后面，结果是一样的。
			参与操作的时候：
					如果++或者--在变量的后面，先拿变量参与操作，后变量做++或者--
					如果++或者--在变量的前面，先变量做++或者--，后拿变量参与操作
			
			
		赋值运算符
			基本的运算符:
				=:赋值,
			
			扩展的:
				+=,-=,*=,/=,%=
				
				如果前后计算的数据的数据类型不同,扩展的赋值运算符会有强制类型的转换.
				如果使用扩展的赋值运算符,要保证变量是已经被初始化值的.
				
				在++或者--运算的时候,如果前后的数据类型不一致,也会强制类型转换.
				
		
		关系运算符
			无论关系运算写的如何复杂,得到结果只有一种boolean类型的(true,false);
			
			==,!=,>,>=,<,<=
			
			在做比较运算的时候,不能把==号写出=号.
		
		逻辑运算符
			用来连接关系表达式的.得到的结果也是boolean类型(true,false)
			
			| & ^ ! && ||
			
			|:或(或者的意思:如果有多个条件,只要满足其中一个条件即成立(true))
				遇true则true
			
			&:与(并且:如果有多个条件,那么这些条件必须要全部满足返回true,如果有一个不满足返回false)
				遇false则false
			
			^:异或(如果左边和右边结果是一样返回false,如果左边和右边不同返回true)
				相同为false,不同为true
			
			!:非(非真即假,非假即真)
			
			&&和&:
				&&和&执行的结果是一样.
				&&有短路的效果,如果左边是false,则右边不执行了,结果就是false
				
			||和|:
				||和|执行的结果也是一样的
				||也有短路的效果,如果左边是true,则右边执行了,结果就是true
		
		三元运算符
			格式:
				(关系表达式) ? 表达式1 : 表达式2;
				
			执行流程:
				关系表达式如果返回为true,则执行表达式1
				关系表达式如果返回为false,则执行表达式2;
				
				一般情况,三元运算符中的表达式1和表达式2的数据类型是一致的.
		
				
				
				
4.Scanner类(属于引用数据类型)
	使用Scanner的步骤:
		第一步: 导包:目的是什么?让我们能找到Scanner类
			import java.util.Scanner;
			
		第二步:创建对象
			//数据类型 变量名 = 初始化值;
			Scanner sc = new Scanner(System.in);
			
		第三步:接收数据(int类型)
			
			int num = sc.nextInt();//.属于
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				