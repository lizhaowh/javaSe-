1.Random类:获取随机数
	步骤:
		1.导包
			import java.util.Random;
			
		2.创建对象
			Random r = new Random();
		
		3.获取随机数 
			r.nextInt(整数);//大于0的整数.取值范围是[0,这个整数)
			
	案例:获取1到100之间的数,包括1并且包括100
		r.nextInt(100) + 1;//[1,100]
		
2.数组
	什么是数组:
		就是一个容器,它可以同时存储多个数据(元素),要求:这些数据是同种数据类型的.
		
	定义数组格式:
		数据类型[] 数组名(合法的标识符,也就是一个变量名);
		
3.数组初始化：数据属于引用数据类型
	A:所谓的初始化,就是为数组开辟内存空间,并为数组中的每个元素赋予初始值
	
	B:我们有两种方式可以实现数组的初始化
		a:动态初始化	只给出长度,由系统给出初始化值
		b:静态初始化	给出初始化值,由系统决定长度
	
	动态初始化：
		数据类型[] 数组名 = new 数据类型[数组长度];
		eg: int[] arr = new int[3];
		
		=左边的:
			int:确定的数组的数据类型,同时也确定了该数组中存储元素的数据类型
			[]:就是代表数组,一个[]代表的是一维数组
			arr:数组名,合法的标识符
			
			是在栈内存中定义一个int[]类型的arr变量.变量也是需要产生空间.
			
			
		=:赋值号
			将右边的初始化值,赋值给左边的变量
			
		=右边:
			new : 开辟空间,分配内存
			int : 确定的数组的数据类型,同时也确定了该数组中存储元素的数据类型
			[]  : 就是代表数组,一个[]代表的是一维数组
			3 :长度,就是数组中元素的个数
			
			是在堆内存中开辟了一块空间,是一个为int类型的数组开辟的.
			在大空间中根据数组元素的个数,开辟一个连续的小空间.
			
4.如何去访问数组中的元素
	索引(编号,角标,下标)
	
	当我们去定义一个数组的时候,数组的本身是有一个变量名的,但是数组中每一个元素是没有名字的,如果我们想去拿到具体
	
	的元素怎么办?这个时候,我们给他起了一个编号,该编号是从0开始的,0就代表了数组中的第一个元素.

	相等于,我们找到了该编号就找到了该编号所对应的元素值.
			
	我们使用的时候,是用变量(记录的就是数组的地址值)和索引配合使用: 数组名[索引]
			
			
	数组的地址值:[I@104c575 
				 [:代表的是数组,而且是一个一维数组
				 I:数据类型 
				 @:连接符
				 104c575:地址值(十六进制)
			
			
5.一个数组的最大和最小索引
	最小索引: 0
	最大索引:该数据的长度 - 1
	
	
6.int类型的数组,有默认值是: 0

	
7.java中的内存分配
	栈:(和方法有关系)
		存储的都是局部变量
		和局部有关的就是和方法有关,局部指的就是方法
		使用完成就会回收
	
	堆:(new出来的,和对象)
		存储的是new出来的对象,实体
		对象有地址值
		堆中的数据是有默认值的值:
		byte,short,int,long :默认值是:0
		float,double:默认值: 0.0
		char : '\u0000'
		boolean : false
		
		引用数据类型:默认值为null
	
	方法区
	
	本地方法区
	
	寄存器
	
8.关于new出来的对象
	a.如果遇到new出来对象,都会在堆内存中产生一个新的空间,同时生成一个新的地址值.
	
		我们操作的是记录该空间的地址值,我们把该地址值赋值给了栈内存中的变量.我们只要操作
		
		该变量就可以直接操作堆内存中的对象.
	
	
	
9.数组静态初始化
	格式:
		数据类型[] 数组名 = new 数据类型[]{元素1,元素2...};//不能给长度
	
		简化格式:
			数据类型[] 数组名 = {元素1,元素2...};
	
	
		无论静态初始化,或者动态初始化,在堆内存中开辟空间的时候,都是有默认初始化值的.
		
		只不过当我们是静态初始化的时候,我们已经给具体的元素,会使用我们给的元素把默认值给覆盖掉.
		
	
10.两个小问题
	索引越界异常(ArrayIndexOutOfBoundsException)
		产生的原因:我们访问了,不存在的索引.
	
	空指针异常(NullPointerException)
		产生的原因:你访问了,已经不存在的地址值(变量记录的是null)
	
	
11.获取数组的长度
	数组名.length; // length是属性.
	
	获取数组的最大索引 = 数组名.length - 1;
	
12.遍历 --> 循环 --> 迭代
	
	
13.二维数组
	二维数组：其实就是元素为一维数组的数组。
	 
	 定义格式：
	 		A:数据类型[][] 数组名; (推荐的方式)
	 		B:数据类型 数组名[][];
	 		C:数据类型[] 数组名[];
	 初始化：
	 		A:动态初始化
	 			数据类型[][] 数组名 = new 数据类型[m][n];
	 			m表示的是二维数组中一维数组的个数
	 			n表示的是一维数组中的元素个数
	 		B:静态初始化
	 			数据类型[][] 数组名 = new 数据类型[][]{{元素...},{元素...},{元素...},...};
	 			简化格式：
	 			数据类型[][] 数组名 = {{元素...},{元素...},{元素...},...};
	 
	 二维数组名配合索引可以获取到每一个一维数组。
	 每一个一维数组配合索引名可以获取到数组中的元素。
	 
	 假如我有一个二维数组：arr。
	 我要从中获取一维数组：arr[索引]
	 我要从中获取二维数组的元素：arr[索引][索引]
	
	
			
14.有关System.out中的两个方法print()方法和println()
	print():该方法没有换行的功能
	
	println():该方法是有换行的功能,而且可以不输出任何内容(只是代表换行)
	
			
			
			
			
			
			
			
			
			
			