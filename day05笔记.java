 1.方法
	方法：其实就是完成特定功能的代码块
	
	定义格式：
			修饰符 返回值类型 方法名(参数类型 参数名1,参数类型 参数名2...) {
				方法体;
				return 返回值;
			}
	格式解释：
			A:修饰符		目前记住public static(就是为了限定,谁来用(谁可以用),如何用)
			B:返回值类型	用于限定返回值的数据类型
			C:方法名		为了方便我们调用方法的名字(合法的标识符)
			D:参数类型		用于限定调用方法时传入的数据的类型
			E:参数名		用于接收调用方法时传入的数据的变量
			F:方法体		完成功能的代码
			G:return 		结束方法,并且把返回值带给调用者
			
			
	写一个方法有两个明确：
 		A:返回值类型	明确功能结果的数据类型
 		B:参数列表		明确有几个参数，以及参数的数据类型
			
			
2.方法的使用(调用)
	
	如果该方法是有返回值的:
		单独调用 但是没有任何结果,对于我们来说,没有意义,不推荐使用.
		
		输出调用 :可以,能够看到结果,但是只能做输出,后续如果想再使用,必须要重写调用.
				  如果有其他操作,只能是一次性的
	
		赋值调用: 这是我们推荐使用的,通过该方法(功能),拿到一个结果,把这个结果赋值给同种类型的变量,
		
					后续在使用的时候,我们只需要使用该变量即可,无需再反复的调用方法.
					
	如果该方法是没有明确返回值的:
		返回值类型需要使用:void来修饰
		
		只能单独调用.
		
		带void的方法,不需要有return 结果的.
	
	
	方法调用注意事项:
		a.如果方法中有参数,我们必须要给值,而且数据类型要一致.
		
		b.如果方法有返回值,那么我们赋值调用的时候,
			需要定义一个该类型的变量来接收(返回值数什么类型,我们就需要定义什么类型的变量).
		
		c.如果方法需要执行,那么必须要调用
		
		d.如果有返回值类型的数据,必须要有返回值.
		
		e.在一个方法中,可以有多个return语句,但是只有一个被执行.
		
		f.在定义方法的时候,参数我们需要声明(定义)变量,用来接收调用该方法时传入的具体的值(数据类型必须要和方法中定义的变量一样).
	
		g.在方法中定义的变量名,和我们调用方法时传入的变量名是没有关系的.
	
		h.返回值的数据类型和参数的数据类型是没有关系的.是通过该方法执行的代码返回的是一个你想要的结果.

		i.方法不能定义在方法内部;方法不能嵌套定义;
	
		j.在同一个类中是不可以出现,两个一模一样的方法.
	
	
3.方法的重载
	重载:在同一类中,出现了多个方法名相同的情况.

	方法重载的特点:
		方法名相同
		
		参数列表不同:
			参数的个数不同
			
			数据类型不同(包括数据类型的顺序不同)

		和返回值无关
	
	 注意：
  		在调用方法的时候，java虚拟机会通过参数列表的不同来区分同名的方法。
	
	
4.方法的参数如果是基本数据类型：形式参数的改变不影响实际参数。
	形式参数：用于接收实际参数的变量
	实际参数：实际参与运算的变量	
	
	
	基本数据类型作为参数传递的时候,传递的是数值.
	
	
5.如果参数是引用数据类型：形式参数的改变直接影响实际参数			
			
	引用数据类型作为参数传递的时候,传递的是对象的地址值.
			
			
6.return语句
	结束方法
	
	如果有返回值,会把方法结束,并且把值返回给调用者
			
			
			
			
			
			
			